{"version":3,"sources":["component/Movie.jsx","App.js","reportWebVitals.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","getMovies","API","fetch","then","res","json","data","results","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLA+BeA,EAjBD,SAAC,GAAkD,IAV3CC,EAUNC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,aAC1C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKJ,EAfP,mCAe+BA,EAAe,+JAAgKK,IAAKN,IACtN,sBAAKI,UAAU,aAAf,UACI,6BAAKJ,IACL,sBAAMI,UAAS,eAhBTL,EAgB+BI,EAf9CJ,GAAQ,EACA,QACFA,GAAO,EACL,SAEA,QAUC,SAAuDI,OAG3D,sBAAKC,UAAU,aAAf,UACI,0CACA,4BAAIF,WCmCLK,EAnDH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTC,EADS,KACDC,EADC,OAEoBF,mBAAS,IAF7B,mBAETG,EAFS,KAEGC,EAFH,KAIhBC,qBAAU,WACRC,EATgB,yHAUf,IAEH,IAAMA,EAAY,SAACC,GACjBC,MAAMD,GACHE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJV,EAAUU,EAAKC,aAiBrB,OACE,eAAC,WAAD,WACE,iCACE,sBAAMC,SAhBW,SAACC,GACtBA,EAAEC,iBAECb,IACDG,EAtBY,6FAsBWH,GACvBC,EAAc,MAWZ,SACE,uBACER,UAAU,SACVqB,KAAK,SACLC,YAAY,YACZC,MAAOhB,EACPiB,SAba,SAACL,GACtBX,EAAcW,EAAEM,OAAOF,cAerB,qBAAKvB,UAAU,kBAAf,SACGK,EAAOqB,OAAS,GAAKrB,EAAOsB,KAAI,SAACC,GAAD,OAC/B,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,aCxCbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.7a09ecf2.chunk.js","sourcesContent":["import style from '../styles/styles.scss';\r\n\r\nconst IMG_API =\"https://image.tmdb.org/t/p/w1280\";\r\n\r\nconst setVoteClass = (vote) => {\r\n    if(vote >= 8) {\r\n        return 'green';\r\n    }else if(vote >=6) {\r\n        return 'orange';\r\n    }else{\r\n        return 'red';\r\n    }\r\n};\r\n\r\nconst Movie = ({title, poster_path, overview, vote_average}) => {\r\n    return(\r\n        <div className=\"movie\">\r\n            <img src={poster_path ?(IMG_API + poster_path) : 'https://images.unsplash.com/photo-1542204165-65bf26472b9b?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=967&q=80'} alt={title}/>\r\n            <div className=\"movie-info\">\r\n                <h3>{title}</h3>\r\n                <span className={`tag ${setVoteClass(vote_average)}`}>{vote_average}</span>\r\n            </div>\r\n\r\n            <div className=\"movie-over\">\r\n                <h2>Overview</h2>\r\n                <p>{overview}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;","import { Fragment } from 'react';\nimport { useEffect, useState } from 'react';\nimport Movie from './component/Movie';\nimport styles from './styles/styles.scss'\n\nconst FEATURED_API =\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\";\n// const IMG_API =\"https://image.tmdb.org/t/p/w1280\";\nconst SEARCH_API =\"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\";\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  useEffect(()=> {\n    getMovies(FEATURED_API);\n  }, []);\n\n  const getMovies = (API) => {\n    fetch(API)\n      .then(res => res.json())\n      .then(data => {\n        setMovies(data.results)\n      })  \n  }\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    if(searchTerm){\n      getMovies(SEARCH_API + searchTerm)\n      setSearchTerm('');\n    }\n  };\n\n  const handleOnChange = (e) => {\n    setSearchTerm(e.target.value);\n  }\n\n  return (\n    <Fragment>\n      <header>\n        <form onSubmit={handleOnSubmit}>\n          <input \n            className=\"search\" \n            type=\"search\" \n            placeholder=\"Search...\" \n            value={searchTerm}\n            onChange={handleOnChange}/>\n        </form>\n      </header>\n      <div className=\"movie-container\">\n        {movies.length > 0 && movies.map((movie)=> (\n          <Movie key={movie.id} {...movie} />\n          ))  \n        }  \n      </div>\n    </Fragment>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}